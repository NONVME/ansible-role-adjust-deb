---
- name: packages | disable apt recommends
  blockinfile:
    path: /etc/apt/apt.conf.d/02norecommends
    mode: 0644
    create: true
    block: |
      APT::Install-Recommends "false";
      APT::Install-Suggests "false";
      APT::Get::Install-Recommends "false";
      APT::Get::Install-Suggests "false";

- name: packages | upgrade all system packages
  apt:
    upgrade: full
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success

- name: packages | install common packages
  apt:
    name: "{{ apt_install_packages }}"
    install_recommends: false
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_install_common
  retries: 5
  until: apt_install_common is success
  when:
    - apt_install_packages is defined
    - apt_install_packages is iterable
    - apt_install_packages | length > 0

- name: packages | gather installed packages
  package_facts:
    manager: auto

- name: packages | remove packages
  block:
    - name: packages | check if snap is installed
      debug:
        msg: "snapd is installed"
      register: snapd_check
      when:
        - "'snapd' in apt_remove_packages"
        - "'snapd' in ansible_facts.packages"
    - name: packages | remove snap packages
      command: snap remove {{ item }}
      loop:
        - lxd
        - core18
        - core20
        - snapd
      when:
        - "'snapd' in apt_remove_packages"
        - "'snapd' in ansible_facts.packages"
        - snapd_check.failed is defined
    - name: packages | remove packages
      apt:
        name: "{{ apt_remove_packages }}"
        state: absent
        autoremove: true
    - name: packages | remove files
      file:
        state: absent
        path: "{{ item }}"
      loop:
        - "/home/{{ ansible_user }}/.snap"
        - "/snap"
        - "/var/snap"
        - "/var/lib/snapd"
        - "/var/cache/snapd"
        - "/usr/lib/snapd"
        - "/etc/cloud"
        - "/var/lib/cloud"
      when:
        - "'snapd' in apt_remove_packages"
        - "'cloud-init' in apt_remove_packages"
  when:
    - apt_remove_packages is defined
    - apt_remove_packages is iterable
    - apt_remove_packages | length > 0


# Collect the packages installed on the system so we can check against them later
- name: Collect package list
  package_facts:
    manager: auto
  tags:
    - always


- name: Generate a pkgs report
  delegate_to: localhost
  become: false
  block:
    - name: Create main directory in ssh space
      ansible.builtin.file:
        path: "{{ item.ssh.path | dirname }}"
        mode: 0700
        state: directory
      with_items: "{{ users }}"
      when: item.username is not search(user_app_postfix + '$')
      tags:
        - ssh-keys-generate-directories

    - name: Write package list to a file
      copy:
        dest: "{{ item.ssh.path }}package_list.txt"
        content: "{{ ansible_facts.packages | to_nice_json }}"
      with_items: "{{ users }}"
      when: item.username is not search(user_app_postfix + '$')
      tags:
        - always
