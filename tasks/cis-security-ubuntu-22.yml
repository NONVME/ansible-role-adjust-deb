# Let the user know what version of the controls file is running
# Use a variable so it prints out the correct version.
- name: Print Header
  ansible.builtin.debug:
    msg: "CIS Controls for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"

# Collect the packages installed on the system so we can check against them later
- name: Collect package list
  ansible.builtin.package_facts:
    manager: auto
  tags:
    - always

# Find the minimum UID of the machine for normal accocunts. This varies
#  between machines and environments, so we pull it from the file it
#  is supposed to exist in.
- name: Determine the Minimum UID for new, non-system, accounts
  ansible.builtin.command: "/usr/bin/awk '/^s*UID_MIN/{print $2}' /etc/login.defs"
  register: min_uid
  changed_when: min_uid.rc == "2"
  tags:
    - always

# The sysctl module will set variables in /etc/sysctl.conf and tell sysctl
#  to reload them immediately if 'reload' is set to 'yes'.
- name: 1.5.1 - Ensure address space layout reandomization (ASLR) is enabled
  ansible.posix.sysctl:
    name: kernel.randomize_va_space
    value: "2"
    reload: true
    state: present
    sysctl_set: true
  tags:
    - 1.5.1

# Use system package manager to remove the prelink package
- name: 1.5.2 - Remove prelink package
  ansible.builtin.package:
    name: prelink
    state: absent
  tags:
    - 1.5.2

- name: 1.5.3 - Ensure Apport Error Reporting Service is disabled
  tags:
    - 1.5.3
  when:
    - "'apport' in ansible_facts.packages"
  block:
    - name: 1.5.3 - Ensure Apport Error Reporting Service is disabled
      ansible.builtin.systemd:
        name: apport.service
        enabled: false
        state: stopped

    - name: 1.5.3 - Ensure that it does not start again
      ansible.builtin.lineinfile:
        dest: "/etc/default/apport"
        regexp: '^\ *enabled\ *=\ *[^0]\b'
        line: "enabled=0"
        state: present

- name: 1.5.4 - Ensure core dumps are restricted
  tags:
    - 1.5.4
  block:
    # The sysctl module will set variables in /etc/sysctl.conf and tell sysctl
    #  to reload them immediately if 'reload' is set to 'yes'.
    - name: 1.5.4 - Ensure core dumps are restricted
      ansible.posix.sysctl:
        name: fs.suid_dumpable
        value: "0"
        state: present
        reload: true

# 1.7 Warning Banners

# Use copy module to copy in the appropriate files based on variable and set permissions
- name: 1.7.1 - Install motd banners
  ansible.builtin.copy:
    src: "{{ motd_file }}"
    dest: /etc/motd
    owner: root
    group: root
    mode: 0644
  when: motd_use is defined and motd_use
  tags:
    - 1.7.1
    - 1.7.4

# Use copy module to copy in the appropriate files based on variable and set permissions
- name: 1.7.2 - Install issue banners
  ansible.builtin.copy:
    src: "{{ issue_file }}"
    dest: /etc/issue
    owner: root
    group: root
    mode: 0644
  when: issue_use is defined and issue_use
  tags:
    - 1.7.2
    - 1.7.5

# Use copy module to copy in the appropriate files based on variable and set permissions
- name: 1.7.3 - Install issue.net banners
  ansible.builtin.copy:
    src: "{{ issue_net_file }}"
    dest: /etc/issue.net
    owner: root
    group: root
    mode: 0644
  when: issue_net_use is defined and issue_net_use
  tags:
    - 1.7.3
    - 1.7.6

# 1.8 GDM

# Disable GDM
- name: 1.8.1 - Remove GDM display manager
  tags:
    - 1.8.1
  block:
    - name: 1.8.1 - Remove the GNOME display manager
      ansible.builtin.apt:
        name: gdm3
        state: absent
        purge: true
      when: "'gdm3' in ansible_facts.packages and not graphical_interface"

# add a banner to the login screen if the graphical_interface variable is set to true
- name: 1.8.[2-3] Ensure GDM banner set up
  when: graphical_interface is defined and graphical_interface
  tags:
    - 1.8.2
    - 1.8.3
    - 1.8.4
  block:
    - name: 1.8.[2-4] - Make sure gdm settings files have been created
      ansible.builtin.file:
        path: "/etc/dconf/db/gdm.d"
        owner: root
        group: root
        mode: 0755
        setype: etc_t
        state: directory

    - name: 1.8.[2-4] - Set up dconf profile for gdm
      ansible.builtin.blockinfile:
        path: /etc/dconf/profile/gdm
        owner: root
        group: root
        mode: 0644
        setype: etc_t
        create: true
        block: |
          user-db:user
          system-db:gdm
          file-db:/usr/share/gdm/greeter-dconf-defaults

    - name: 1.8.[2-3] - Create the defaults file and populate group
      ansible.builtin.blockinfile:
        path: /etc/dconf/db/gdm.d/01-banner-message
        owner: root
        group: root
        mode: 0644
        setype: etc_t
        create: true
        marker: "# {mark} Ansible Managed login-screen block"
        block: |
          [org/gnome/login-screen]
      tags:
        - 1.8.2
        - 1.8.3

    - name: 1.8.2 - Enable login screen for gdm
      ansible.builtin.blockinfile:
        # Add our required pieces to the greeter defaults file
        path: /etc/dconf/db/gdm.d/01-banner-message
        owner: root
        group: root
        mode: 0644
        setype: etc_t
        insertafter: "[org/gnome/login-screen]"
        marker: "# {mark} Ansible Managed banner-message"
        block: |
          banner-message-enable=true
          banner-message-text='Authorized users only. All activity may be monitored and reported.'
      tags:
        - 1.8.2

    - name: 1.8.3 Ensure GDM disable-user list is enabled
      ansible.builtin.blockinfile:
        path: /etc/dconf/db/gdm.d/01-banner-message
        owner: root
        group: root
        mode: 0644
        setype: etc_t
        insertafter: "[org/gnome/login-screen]"
        marker: "# {mark} Ansible Managed disable-user-list"
        block: |
          disable-user-list=true
      tags:
        - 1.8.3

    - name: 1.8.4 Set gdm timeouts
      ansible.builtin.blockinfile:
        path: /etc/dconf/db/gdm.d/00-screensaver
        owner: root
        group: root
        mode: 0644
        setype: etc_t
        create: true
        marker: "# {mark} Ansible Managed Timeouts"
        block: |
          # Specify the dconf path
          [org/gnome/desktop/session]

          # Number of seconds of inactivity before the screen goes blank
          # Set to 0 seconds if you want to deactivate the screensaver.
          idle-delay=uint32 {{ idle_delay }}
          # Specify the dconf path
          [org/gnome/desktop/screensaver]
          # Number of seconds after the screen is blank before locking the screen
          lock-delay=uint32 {{ lock_delay }}
      tags:
        - 1.8.4
# 2 Services
# Ubuntu since 16.04 does not recommend NTP so we are only checking for timesyncd or chrony

- name: 2.2.3.1 - Configure timesyncd
  ansible.builtin.template:
    src: "timesyncd.conf"
    dest: /etc/systemd/timesyncd.conf
    owner: root
    group: root
    mode: 0644
  when: time_service == "timesyncd"
  notify: Restart timesyncd
  tags:
    - 2.1.3.1

- name: 2.2.3.2 - Enable and start timesyncd
  ansible.builtin.systemd:
    name: systemd-timesyncd
    masked: false
    enabled: true
    state: started
  when: time_service == "timesyncd"
  tags:
    - 2.2.3.2

- name: 3.1.3 - Ensure bluetooth is disabled
  ansible.builtin.systemd:
    name: bluetooth
    enabled: false
    masked: true
    state: stopped
  when: "'bluez' in ansible_facts.packages and ( service_bluetooth is defined and not service_bluetooth  )"
  tags:
    - 3.1.3

#  IPv4 network parameters
- name: 3.2.0 - Create empty dictionary for unneeded IPv4 network parameters
  ansible.builtin.set_fact:
    unneeded_ipv4_network: {}

- name: 3.2.0 - Create empty dictionary for unneeded IPv6 network parameters
  ansible.builtin.set_fact:
    unneeded_ipv6_network: {}

- name: 3.2.2 - Ensure IP forwarding is disabled
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ 'net.ipv4.ip_forward' : '0'}) }}"
  tags:
    - 3.2.2

- name: 3.2.2 - Ensure IP forwarding is disabled
  ansible.builtin.set_fact:
    unneeded_ipv6_network: "{{ unneeded_ipv6_network | combine({ 'net.ipv6.conf.all.forwarding' : '0'}) }}"
  when: not ipv6_disable
  tags:
    - 3.2.2

- name: 3.2.1 - Ensure packet redirect sending is disabled
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ item : '0' }) }}"
  loop:
    - net.ipv4.conf.all.send_redirects
    - net.ipv4.conf.default.send_redirects
  tags:
    - 3.2.1

- name: 3.3.1 - Ensure source routed packets are not accepted
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ item : '0' }) }}"
  loop:
    - net.ipv4.conf.all.accept_source_route
    - net.ipv4.conf.default.accept_source_route
  tags:
    - 3.3.1

- name: 3.3.1 - Ensure source routed packets are not accepted
  ansible.builtin.set_fact:
    unneeded_ipv6_network: "{{ unneeded_ipv6_network | combine({ item : '0' }) }}"
  loop:
    - net.ipv6.conf.all.accept_source_route
    - net.ipv6.conf.default.accept_source_route
  when: not ipv6_disable
  tags:
    - 3.3.1

- name: 3.3.2 - Ensure ICMP redirects are not accepted
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ item : '0' }) }}"
  loop:
    - net.ipv4.conf.all.accept_redirects
    - net.ipv4.conf.default.accept_redirects
  tags:
    - 3.3.2

- name: 3.3.2 - Ensure ICMP redirects are not accepted
  ansible.builtin.set_fact:
    unneeded_ipv6_network: "{{ unneeded_ipv6_network | combine({ item : '0' }) }}"
  loop:
    - net.ipv6.conf.all.accept_redirects
    - net.ipv6.conf.default.accept_redirects
  when: not ipv6_disable
  tags:
    - 3.3.2

- name: 3.3.3 - Ensure secure ICMP redirects are not accepted
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ item : '0' }) }}"
  loop:
    - net.ipv4.conf.all.secure_redirects
    - net.ipv4.conf.default.secure_redirects
  tags:
    - 3.3.3

- name: 3.3.4 - Ensure suspicious packets are logged
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ item : '1' }) }}"
  loop:
    - net.ipv4.conf.all.log_martians
    - net.ipv4.conf.default.log_martians
  tags:
    - 3.3.4

- name: 3.3.5 - Ensure broadcast ICMP requests are ignored
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ 'net.ipv4.icmp_echo_ignore_broadcasts' : '1' }) }}"
  tags:
    - 3.3.5

- name: 3.3.6 - Ensure bogus ICMP responses are ignored
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ 'net.ipv4.icmp_ignore_bogus_error_responses' : '1' }) }}"
  tags:
    - 3.3.6

- name: 3.3.7 - Ensure reverse path filtering is enabled
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ item : '1' }) }}"
  loop:
    - net.ipv4.conf.all.rp_filter
    - net.ipv4.conf.default.rp_filter
  tags:
    - 3.3.7

- name: 3.3.8 - Ensure TCP SYN Cookies is enabled
  ansible.builtin.set_fact:
    unneeded_ipv4_network: "{{ unneeded_ipv4_network | combine({ 'net.ipv4.tcp_syncookies' : '1' }) }}"
  tags:
    - 3.3.8

- name: 3.3.9 - Ensure IPv6 router advertisements are not accepted
  ansible.builtin.set_fact:
    unneeded_ipv6_network: "{{ unneeded_ipv6_network | combine({ item : '0' }) }}"
  when: not ipv6_disable
  loop:
    - net.ipv6.conf.all.accept_ra
    - net.ipv6.conf.default.accept_ra
  tags:
    - 3.3.9

- name: 3.3 - list of IPv4 network settings
  ansible.builtin.debug:
    var: unneeded_ipv4_network

- name: 3.3 - list of IPv6 network settings
  ansible.builtin.debug:
    var: unneeded_ipv6_network

# The sysctl module will configure certain sysctl parameters. They are
#  collected into a loop here to speed the implementation
# Once complete, notify the system to flush the network routes
- name: 3.3 - Process unneeded network settings for IPv4
  tags:
    - 3.3.0
  block:
    - name: 3.3 - Set networking parameters
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        reload: true
        state: present
        sysctl_set: true
      loop: "{{ lookup('ansible.builtin.dict' , unneeded_ipv4_network) }}"
      notify: Flush network routes

# Section 3 - Firewall

- name: 3.5.1 - Install firewall package
  when: enable_firewall is defined and enable_firewall == "ufw"
  tags:
    - 3.5.1
  block:
    - name: 3.5.1.1 - Install ufw
      ansible.builtin.package:
        name: "ufw"
        state: present
      notify: Enable ufw # 3.5.1.2

    - name: 3.5.1.2 - Ensure iptbles-persistent is not installed with ufw
      ansible.builtin.package:
        name: "iptables-persistent"
        state: absent

    - name: Reset UFW
      community.general.ufw:
        state: reset
      notify: Enable ufw # 3.5.1.2

    - name: Deny outgoing traffic
      community.general.ufw:
        default: deny
        direction: outgoing
      notify: Enable ufw # 3.5.1.2

    - name: Deny incoming traffic
      community.general.ufw:
        default: deny
        direction: incoming
      notify: Enable ufw # 3.5.1.2

    - name: 3.5.1.4 - implement loopback rules (1/3)
      community.general.ufw:
        rule: allow
        direction: in
        interface: lo
      notify: Enable ufw # 3.5.1.2

    - name: 3.5.1.4 - implement loopback rules (2/3)
      community.general.ufw:
        rule: deny
        direction: in
        from_ip: 127.0.0.0/8
      notify: Enable ufw # 3.5.1.2

    - name: 3.5.1.4 - implement loopback rules (3/3)
      community.general.ufw:
        rule: deny
        direction: in
        from_ip: '::1'
      notify: Enable ufw # 3.5.1.2

    - name: 3.5.1.4 - implement ssh limit rules
      community.general.ufw:
        rule: limit
        port: "{{ security_ssh_port }}"
        proto: tcp
        comment: 'SSH Allow 6 connections over 30 seconds'
      notify: Enable ufw # 3.5.1.2

    - name: Allow all access from RFC1918 networks to this host
      community.general.ufw:
        rule: allow
        src: '{{ item }}'
      loop:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow in 5353/udp comment 'avahi'
      community.general.ufw:
        rule: allow
        port: 5353
        proto: udp
        comment: 'avahi'
        direction: in
        from: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow in 80/tcp
      community.general.ufw:
        rule: allow
        port: 80
        proto: tcp
        direction: in
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow in 443/tcp
      community.general.ufw:
        rule: allow
        port: 443
        proto: tcp
        direction: in
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow out 5353/udp comment 'avahi'
      community.general.ufw:
        rule: allow
        port: 5353
        proto: udp
        comment: 'avahi'
        direction: out
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow out 123/udp comment 'NTP'
      community.general.ufw:
        rule: allow
        port: 123
        proto: udp
        comment: 'NTP'
        direction: out
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow out 53/udp
      community.general.ufw:
        rule: allow
        port: 53
        proto: udp
        direction: out
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow out 80/tcp
      community.general.ufw:
        rule: allow
        port: 80
        proto: tcp
        direction: out
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: ufw allow out 443/tcp
      community.general.ufw:
        rule: allow
        port: 443
        proto: tcp
        direction: out
        to: any
      notify: Enable ufw # 3.5.1.2

    - name: Display upcoming skips
      ansible.builtin.debug:
        msg: |
          3.5.1.5 - Configure outbound connections must be handled locally
          3.5.1.6 - Ensure firewall rules exist for all open ports must be handled locally
          3.4.1.7 - Ensure ufw default deny firewall policy


# Section 4 - Logging and Auditing

- name: 4.1.1 - Configure Auditd
  tags:
    - 4.1.1
  when: enable_audit is defined and enable_audit
  block:
    - name: 4.1.1.1 - Install Audit
      ansible.builtin.package:
        name:
          - auditd
          - audispd-plugins
        state: present
      tags:
        - 4.1.1.1

    - name: 4.1.1.2 - Enable auditd service
      ansible.builtin.service:
        name: auditd
        enabled: true
        state: started
      tags:
        - 4.1.1.2

    # The replace module here is looking through file and make replacements of partial lines
    - name: 4.1.1.[1-2] - Configure audit log storage size
      ansible.builtin.replace:
        path: /etc/audit/auditd.conf
        regexp: "{{ item.find }}"
        replace: "{{ item.replace }}"
      loop:
        - {find: '^max_log_file\s+=\s+[^{{ log_file_size }}]', replace: 'max_log_file = {{ log_file_size }}'} # 4.1.2.1
        - {find: '^max_log_file_action\s+=\s+((?!keep_logs).)*$', replace: 'max_log_file_action = keep_logs'} # 4.1.2.2
        - {find: '^space_left_action\s+=\s+((?!email).)*$', replace: 'space_left_action = email'} # 4.1.2.2
        - {find: '^action_mail_acct\s+=\s+((?!root).)*$', replace: 'action_mail_acct = root'} # 4.1.2.2
        - {find: '^admin_space_left_action\s+=\s+((?!suspend).)*$', replace: 'admin_space_left_action = suspend'} # 4.1.2.2
      notify: Restart auditd
      tags:
        - 4.1.2.1
        - 4.1.2.2
        - 4.1.2.3

    # For the next several checks, each one is in their own file, so we are using
    #  the copy module to place each file independently and then motifying
    #  a restart of auditd if anything changes.

    # cis-security versions before 1.5.0 did not enumerate the files, so the old files
    #  need to be removed to make way for the new versions
    - name: 4.1.3 - Remove old rules files that were not in correct order (pre v1.5.0)
      ansible.builtin.file:
        path: "/etc/audit/rules.d/{{ item }}"
        state: absent
      tags:
        - 4.1.3
      loop:
        - sudolog.rules
        - sudoers.rules
        - user_emulation.rules
        - datetime.rules
        - network.rules
        - file-system-mounts.rules
        - bad-file-access.rules
        - user-group-info.rules
        - dac.rules
        - sessions.rules
        - delete.rules
        - login.rules
        - MAC-policy.rules
        - chcon.rules
        - setfacl.rules
        - chacl.rules
        - usermod.rules
        - modules.rules

    - name: 4.1.3 - Remove default rule that comes with package
      ansible.builtin.file:
        path: "/etc/audit/rules.d/audit.rules"
        state: absent
      notify: Restart auditd
      tags:
        - 4.1.3

    # This isn't the best way to do this since users can modify the line and it will
    #  break this control check. It needs to be re-evaluated.
    - name: 4.1.3.[1,3] - Ensure changes to sudoers is collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-sudolog.rules
        src: audit_rules/sudolog.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.1
        - 4.1.3.3

    - name: 4.1.3.4 Ensure to collect events that modify date/time
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-datetime.rules
        src: audit_rules/datetime.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.4

    - name: 4.1.3.5 - Ensure modifications to network environment are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-network.rules
        src: audit_rules/network.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.5

    # Control 4.1.3.6 - Ensure use of privileged commands is collected, is machine dependent
    # skipping

    - name: 4.1.3.7 - Ensure unsuccessful unauthorized file access attempts are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-bad-file-access.rules
        src: audit_rules/bad-file-access.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.7

    - name: 4.1.3.8 - Ensure events that modify user/group information are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-user-group-info.rules
        src: audit_rules/user-group-info.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.8

    # For the next several checks, each one is in their own file, so we are using
    #  the copy module to place each file independently and then motifying
    #  a restart of auditd if anything changes.


    - name: 4.1.3.9 - Ensure modifications to discretionary access controls are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-dac.rules
        src: audit_rules/dac.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.9

    - name: 4.1.3.10 - Ensure successful file system mounts are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-file-system-mounts.rules
        src: audit_rules/file-system-mounts.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.10

    - name: 4.1.3.11 - Ensure session initiation information is collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-sessions.rules
        src: audit_rules/sessions.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.11

    - name: 4.1.3.12 - Ensure system logins are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-login.rules
        src: audit_rules/login.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.12

    - name: 4.1.3.13 - Ensure file deletion events by users are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-delete.rules
        src: audit_rules/delete.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.13

    - name: 4.1.3.14 - Ensure modifications to Mandatory Access Controls are collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-MAC-policy.rules
        src: audit_rules/MAC-policy.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.14

    - name: 4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-chcon.rules
        src: audit_rules/chcon.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.15

    - name: 4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-setfacl.rules
        src: audit_rules/setfacl.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.16

    - name: 4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-chacl.rules
        src: audit_rules/chacl.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.17

    - name: 4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-usermod.rules
        src: audit_rules/usermod.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.18

    - name: 4.1.3.19 - Ensure kernel module loading and unloading is collected
      ansible.builtin.template:
        dest: /etc/audit/rules.d/00-modules.rules
        src: audit_rules/modules.rules
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.19

    - name: 4.1.3.20 - Ensure audit configuration is immutable
      ansible.builtin.copy:
        dest: /etc/audit/rules.d/99-finalize.rules
        content: |
          -e 2
        owner: root
        group: root
        mode: 0600
      notify: Restart auditd
      tags:
        - 4.1.3.20

    # 4.1.3.21 - Ensure running and on disk configuration is the same requires manual review - skipping

    - name: 4.1.4.[1-2,4-7] - Set auditd files to mode 600, user root, group root
      ansible.builtin.copy:
        dest: "{{ item }}"
        owner: root
        group: root
        mode: 0600
        force: false
        content: ""
      loop:
        - "/etc/audit/auditd.conf"
        - "{{ log_file }}"
      tags:
        - 4.1.4.1
        - 4.1.4.2
        - 4.1.4.3
        - 4.1.4.4
        - 4.1.4.5
        - 4.1.4.6
        - 4.1.4.7

    - name: 4.1.4.[8-10] - Ensure audit tools are 0755 or less permissive
      ansible.builtin.file:
        path: "{{ item }}"
        owner: root
        group: root
        mode: 'go-w'
      loop:
        - "/sbin/auditctl"
        - "/sbin/aureport"
        - "/sbin/ausearch"
        - "/sbin/autrace"
        - "/sbin/auditd"
        - "/sbin/augenrules"
      tags:
        - 4.1.4.8
        - 4.1.4.9
        - 4.1.4.10

    - name: 4.1.4.11 Ensure cryptographic mechanisms are used to protect the integrity of audit tools
      ansible.builtin.blockinfile:
        path: /etc/aide.conf.d/crypt.conf
        owner: root
        group: root
        create: true
        mode: 0644
        block: |
          # Audit Tools
          /sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
          /sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
          /sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
          /sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
          /sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
          /sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512
      tags:
        - 4.1.4.11

- name: 5.1 - Configure time-based job schedulers
  tags:
    - 5.1.0
  block:
    - name: 5.1.0 - Create the cron/at allow files
      ansible.builtin.copy:
        dest: "{{ item }}"
        content: ""
        force: false
        owner: root
        group: root
        mode: 0644
      with_items:
        - /etc/cron.allow
        - /etc/at.allow

    - name: 5.1.2 - Ensure permissions on /etc/crontab
      ansible.builtin.file:
        path: /etc/crontab
        owner: root
        group: root
        mode: 0600
      tags:
        - 5.1.2

    - name: 5.1.[3-7] - Ensure permissions on crontab directories
      ansible.builtin.file:
        path: "{{ item }}"
        owner: root
        group: root
        mode: 0700
        state: directory
      loop:
        - /etc/cron.hourly
        - /etc/cron.daily
        - /etc/cron.weekly
        - /etc/cron.monthly
        - /etc/cron.d
      tags:
        - 5.1.3
        - 5.1.4
        - 5.1.5
        - 5.1.6
        - 5.1.7

    - name: 5.1.8 - Ensure cron is restricted to authorized users - Create file
      ansible.builtin.file:
        path: /etc/cron.allow
        owner: root
        group: root
        mode: 0600
        state: file
      when: cron_allow and cron_allow | length > 0
      tags:
        - 5.1.8

    - name: 5.1.8 - Ensure cron is restricted to authorized users
      ansible.builtin.lineinfile:
        path: /etc/cron.allow
        regexp: ^{{ item.0 }}
        line: "{{ item.0 }}"
        owner: root
        group: root
        mode: 0600
        create: true
      loop:
        - "{{ cron_allow }}"
      when: cron_allow and cron_allow | length > 0
      tags:
        - 5.1.8

    - name: 5.1.9 - Ensure at is restricted to authorized users - Create file
      ansible.builtin.file:
        path: /etc/at.allow
        owner: root
        group: root
        mode: 0600
        state: file
      when: at_allow and at_allow | length > 0
      tags:
        - 5.1.9

    - name: 5.1.9 - Ensure at is restricted to authorized users
      ansible.builtin.lineinfile:
        path: /etc/at.allow
        regexp: ^{{ item.0 }}
        line: "{{ item.0 }}"
        owner: root
        group: root
        mode: 0600
        create: true
      loop:
        - "{{ at_allow }}"
      when: at_allow and at_allow | length > 0
      tags:
        - 5.1.9

    - name: 5.1.1 - Ensure cron daemon is enabled an activated
      ansible.builtin.systemd:
        name: cron
        enabled: true
        state: started
        masked: false
      tags:
        - 5.1.1

- name: 5.1.1 - Configure journald
  when: log_service and log_service == "journald"
  tags:
    - 5.1.1
  block:
    - name: 5.1.1.1.1 - Ensure systemd-journald-remote is installed
      ansible.builtin.package:
        name: systemd-journal-remote
        state: present
      tags:
        - 5.1.1.1.1

    # Control 5.1.1.1.2 is machine dependent, skipping
    # Control 5.1.1.1.3 required 5.1.1.1.2 be configured prior. skipping

    - name: 5.1.1.1.4 - Ensure systemd-jornal-remote.socket is masked
      ansible.builtin.systemd:
        name: systemd-journal-remote.socket
        enabled: false
        masked: true
      tags:
        - 5.1.1.1.4

    - name: 5.1.1.2 Ensure systemd-journal-remote.socket service is masked
      ansible.builtin.systemd:
        name: systemd-journal-remote.service
        enabled: false
        masked: true
      tags:
        - 5.1.1.2

    - name: 5.1.1.3 - Ensure journald compresses large files
      ansible.builtin.lineinfile:
        dest: /etc/systemd/journald.conf
        regexp: "^Compress=((?!yes).)*$"
        line: "Compress=yes"
        insertafter: "^#Compress="
      notify: Restart journald
      tags:
        - 5.1.1.3

    - name: 5.1.1.4 - Ensure journald writes to peristent disk
      ansible.builtin.lineinfile:
        dest: /etc/systemd/journald.conf
        regexp: "^Storage=((?!persistent).)*$"
        line: "Storage=persistent"
        insertafter: "^#Storage="
      notify: Restart journald
      tags:
        - 5.1.1.4

    - name: Setting log rotation options in journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^SystemMaxUse='
        line: 'SystemMaxUse=1G'
      notify: Restart journald
      tags:
        - 5.1.1.4

    - name: Setting log rotation options in journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^SystemKeepFree='
        line: 'SystemKeepFree=100M'
      notify: Restart journald
      tags:
        - 5.1.1.4

    - name: Setting log rotation options in journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^SystemMaxFileSize='
        line: 'SystemMaxFileSize=90M'
      notify: Restart journald
      tags:
        - 5.1.1.4

    - name: Setting log rotation options in journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '^SystemMaxFiles='
        line: 'SystemMaxFiles=10'
      notify: Restart journald
      tags:
        - 5.1.1.4

    - name: 5.1.1.5 - Ensure journald is not configured to send logs to rsyslog IF rsyslog is sending logs to a log host
      ansible.builtin.lineinfile:
        dest: /etc/systemd/journald.conf
        regexp: "^ForwardToSyslog=((?!yes).)*$"
        state: absent
      tags:
        - 5.1.1.5

    # Control 5.1.1.6, configure log rotation is machine specific, skipping
    #   TODO
    # Control 5.1.1.7, Ensure journald default file permissions configured, is machine dependant, skipping


    - name: 5.1.1.1.3 - Ensure journald service is enabled
      ansible.builtin.systemd:
        name: systemd-journald
        state: started
        masked: false
        enabled: true
      tags:
        - 5.1.1.1.3

- name: 5.1.2 - Configure rsyslog
  when: log_service and log_service == "rsyslog"
  tags:
    - 5.1.2
  block:
    - name: 5.1.2.3 - Configure journald to forward logs to rsyslog
      tags:
        - 5.1.2.3
      block:
        - name: 5.1.2.3 - Find any rsyslog files where all logs are being forwarded to a loghost
          ansible.builtin.shell: /usr/bin/grep -l -s "^*.*[^I][^I]*@" /etc/rsyslog.conf /etc/rsyslog.d/*.conf
          register: rsyslog_forward_out
          changed_when: false
          failed_when: rsyslog_forward_out.rc == "2"
          check_mode: false

        - name: 5.1.2.3 - Forward journald logs to rsyslog IF rsyslog is sending logs to a log host
          ansible.builtin.lineinfile:
            dest: /etc/systemd/journald.conf
            regexp: "^ForwardToSyslog=((?!yes).)*$"
            line: "ForwardToSyslog=yes"
            insertafter: "#ForwardToSyslog=no"
          when: rsyslog_forward_out.stdout

    - name: 5.1.2.4 - Ensure rsyslog default file permissions are configured
      ansible.builtin.lineinfile:
        path: /etc/rsyslog.conf
        regexp: '^\$FileCreateMode\s+0640'
        line: "$FileCreateMode 0640"
        create: true
        owner: root
        group: root
        mode: 0644
        state: present
      notify: Restart rsyslog
      tags:
        - 5.1.2.4

    - name: 5.1.2.5 - Ensure logging is configured in rsyslog
      ansible.builtin.copy:
        src: "{{ rsyslog_file }}"
        dest: "/etc/rsyslog.d/{{ rsyslog_file }}"
        owner: root
        group: root
        mode: 0640
      when: rsyslog_file is defined and rsyslog_file | length > 0
      tags:
        - 5.1.2.5

    - name: 5.1.2.1 - Ensure rsyslog is installed
      ansible.builtin.package:
        name: rsyslog
        state: present
      tags:
        - 5.1.2.1

    - name: 5.1.2.2 - Enable Rsyslog
      ansible.builtin.service:
        name: rsyslog
        enabled: true
      tags:
        - 5.1.2.2

    # Control 5.1.2.6 - Ensure rsyslog is configured to send logs to a remote log host is machine dependent
    # skipping

    - name: 5.1.2.7 - Ensure remote rsyslog messages are only acepted on designated log hosts
      tags:
        - 5.1.2.7
      block:
        - name: 5.1.2.7 - Find all rsyslog conf files in /etc/rsyslog.d
          ansible.builtin.find:
            paths: "/etc/rsyslog.d"
            patterns: "*.conf"
          register: rsyslog_module_found

        - name: 5.1.2.7 - Disable imtcp loading module on non log hosts (rsyslog.d conf files)
          ansible.builtin.lineinfile:
            dest: "{{ item.path }}"
            regexp: '^\$ModLoad\s+imtcp'
            state: absent
          loop: "{{ rsyslog_module_found.files }}"
          when: log_host is defined and not log_host

        - name: 5.1.2.7 - Disable imtcp loading module on non log hosts (main rsyslog conf file)
          ansible.builtin.lineinfile:
            dest: "/etc/rsyslog.conf"
            regexp: '^\$ModLoad\s+imtcp'
            state: absent
          when: log_host is defined and not log_host

        - name: 5.1.2.7 - Disable TCP port listening on non log hosts (rsylog.d conf files)
          ansible.builtin.lineinfile:
            dest: "{{ item.path }}"
            regexp: '^\$InputTCPServerRun'
            state: absent
          loop: "{{ rsyslog_module_found.files }}"
          when: log_host is defined and not log_host

        - name: 5.1.2.7 - Disable TCP port listening on non log hosts (main rsyslog conf file)
          ansible.builtin.lineinfile:
            dest: "/etc/rsyslog.conf"
            regexp: '^\$InputTCPServerRun'
            state: absent
          when: log_host is defined and not log_host

        - name: 5.1.2.7 - Enable loading of imtcp module on log hosts
          ansible.builtin.lineinfile:
            dest: /etc/rsyslog.d/CIS.conf
            regexp: '^\$ModLoad\s+imtcp'
            line: "$ModLoad imtcp"
            create: true
            owner: root
            group: root
            mode: 0644
          when: log_host is defined and log_host

        - name: 5.1.2.7 - Enable TCP Port listening on port {{ log_port }}
          ansible.builtin.lineinfile:
            dest: /etc/rsyslog.d/CIS.conf
            regexp: '^\$InputTCPServerRun {{ log_port }}'
            line: "$InputTCPServerRun {{ log_port }}"
            create: true
            owner: root
            group: root
            mode: 0644
          when: log_host is defined and log_host

        # Control 5.1.2.6 - Ensure rsyslog is configured to send logs to a remote log host is machine dependent
        # skipping

        - name: 5.1.2.7 - Ensure remote rsyslog messages are only acepted on designated log hosts
          tags:
            - 5.1.2.7
          block:
            - name: 5.1.2.7 - Find all rsyslog conf files in /etc/rsyslog.d
              ansible.builtin.find:
                paths: "/etc/rsyslog.d"
                patterns: "*.conf"
              register: rsyslog_module_found

            - name: 5.1.2.7 - Disable imtcp loading module on non log hosts (rsyslog.d conf files)
              ansible.builtin.lineinfile:
                dest: "{{ item.path }}"
                regexp: '^\$ModLoad\s+imtcp'
                state: absent
              loop: "{{ rsyslog_module_found.files }}"
              when: log_host is defined and not log_host

            - name: 5.1.2.7 - Disable imtcp loading module on non log hosts (main rsyslog conf file)
              ansible.builtin.lineinfile:
                dest: "/etc/rsyslog.conf"
                regexp: '^\$ModLoad\s+imtcp'
                state: absent
              when: log_host is defined and not log_host

            - name: 5.1.2.7 - Disable TCP port listening on non log hosts (rsylog.d conf files)
              ansible.builtin.lineinfile:
                dest: "{{ item.path }}"
                regexp: '^\$InputTCPServerRun'
                state: absent
              loop: "{{ rsyslog_module_found.files }}"
              when: log_host is defined and not log_host

            - name: 5.1.2.7 - Disable TCP port listening on non log hosts (main rsyslog conf file)
              ansible.builtin.lineinfile:
                dest: "/etc/rsyslog.conf"
                regexp: '^\$InputTCPServerRun'
                state: absent
              when: log_host is defined and not log_host

            - name: 5.1.2.7 - Enable loading of imtcp module on log hosts
              ansible.builtin.lineinfile:
                dest: /etc/rsyslog.d/CIS.conf
                regexp: '^\$ModLoad\s+imtcp'
                line: "$ModLoad imtcp"
                create: true
                owner: root
                group: root
                mode: 0644
              when: log_host is defined and log_host

            - name: 5.1.2.7 - Enable TCP Port listening on port {{ log_port }}
              ansible.builtin.lineinfile:
                dest: /etc/rsyslog.d/CIS.conf
                regexp: '^\$InputTCPServerRun {{ log_port }}'
                line: "$InputTCPServerRun {{ log_port }}"
                create: true
                owner: root
                group: root
                mode: 0644
              when: log_host is defined and log_host

# Section 6 - System Maintenance

# Control 6.1.1 - Audit system file permissions, the report is time consuming and requires manual review
# skipping

- name: 6.1.[1,3] - Ensure permissions on /etc/passwd /etc/group /etc/shells
  ansible.builtin.file:
    path: /etc/{{ item }}
    owner: root
    group: root
    mode: 0644
  loop:
    - passwd
    - group
  tags:
    - 6.1.1
    - 6.1.3

- name: 6.1.[5,7] - Ensure permissions on /etc/shadow /etc/gshadow
  ansible.builtin.file:
    path: /etc/{{ item }}
    owner: root
    group: root
    mode: 0000
  loop:
    - shadow
    - gshadow
  tags:
    - 6.1.5
    - 6.1.7

- name: 6.1.[2,4,6,8] - Ensure permissions on /etc/passwd- /etc/[g]shadow- /etc/group-
  ansible.builtin.file:
    path: /etc/{{ item }}
    owner: root
    group: root
    mode: 0000
  with_items:
    - passwd-
    - shadow-
    - group-
    - gshadow-
  tags:
    - 6.1.2
    - 6.1.4
    - 6.1.6
    - 6.1.8

# Control 6.1.9, Ensure no world writable files exist, is system dependent so we are only
# providing a list to the user here.
- name: 6.1.9 - Ensure no world writable files exist
  tags:
    - 6.1.9
  block:
    - name: 6.1.9 - Find any world writiable files
      ansible.builtin.shell: "/bin/df --local -P | /usr/bin/awk {' if (NR!=1) print $6'} | /usr/bin/xargs -I '{}' find '{}' -xdev -type f -perm -0002"
      register: ww_files
      changed_when: false
      check_mode: false

    - name: 6.1.9 - Print any world writable files found
      ansible.builtin.debug:
        msg: "World writiable files found: {{ ww_files.stdout }}"
      changed_when: true
      when: ww_files.stdout

# Control 6.1.10, Ensure no unowned files exist, is system dependent so we are only
# providing a list to the user here.
- name: 6.1.10 - Ensure no unowned files exist
  tags:
    - 6.1.10
  block:
    - name: 6.1.10 - Find any unowned files
      ansible.builtin.shell: "/bin/df --local -P | /usr/bin/awk {' if (NR!=1) print $6'} | /usr/bin/xargs -I '{}' find '{}' -xdev -nouser"
      register: uo_files
      changed_when: false

    - name: 6.1.10 - Print any unowned files found
      ansible.builtin.debug:
        msg: "unowned files found: {{ uo_files.stdout }}"
      changed_when: true
      when: uo_files.stdout

# Control 6.1.10, Enscure no ungrouped files exist, is system dependent so we are only
# providing a list to the user here.
- name: 6.1.11 - Ensure no ungrouped files exist
  tags:
    - 6.1.11
  block:
    - name: 6.1.11 - Find any ungrouped files
      ansible.builtin.shell: "/bin/df --local -P | /usr/bin/awk {' if (NR!=1) print $6'} | /usr/bin/xargs -I '{}' find '{}' -xdev -nogroup"
      register: ug_files
      changed_when: false
      check_mode: false

    - name: 6.1.11 - Print any ungrouped files found
      ansible.builtin.debug:
        msg: "ungrouped files found: {{ uo_files.stdout }}"
      changed_when: true
      when: ug_files.stdout


# Control 6.1.12, Audit SUID executables, is a verification and is system dependent.
# Not implementing because it will always return some SUID files
# Manually review the control

# Control 6.1.13, Audit SGID executables, is a verification and is system dependent.
# Not implementing because it will always return some SUID files
# Manually review the control

- name: 6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
  tags:
    - 6.2.1
  block:
    - name: 6.2.1 - Check to see if there are any accounts with empty passwords
      ansible.builtin.shell: "/bin/cat /etc/shadow | awk -F: '($2 == \"\" ) { print $1 }'"
      changed_when: false
      register: empty_passwords
      check_mode: false

    - name: 6.2.1 - Report the named users to the report
      ansible.builtin.debug:
        msg: "The user {{ item }} has an empty password"
      when: empty_passwords.stdout
      changed_when: true
      loop: "{{ empty_passwords.stdout_lines }}"

- name: 6.2.2 - /etc/shadow password fields are not empty
  ansible.builtin.command: "awk -F: '($2 == \"\")' {{ item }}"
  loop:
    - /etc/shadow
  changed_when: false
  tags:
    - 6.2.2

- name: 6.2.3 - Report on groups in /etc/passwd  with a GID not in /etc/group
  tags:
    - 6.2.3
  block:
    - name: 6.2.3 - Use script to pull the list of groups
      ansible.builtin.script:
        cmd: files/undefined_groups.sh
      register: undefined_groups
      changed_when: false
      check_mode: false

    - name: 6.2.3 - Report to user any unreferenced groups
      ansible.builtin.debug:
        msg: "{{ undefined_groups.stdout_lines }}"
      changed_when: true
      when: undefined_groups.stdout

- name: 6.2.4 - Report if shadow group exists in /etc/group
  block:
    - name: 6.2.4 - Determine if the shadow group exists in /etc/group
      ansible.builtin.command: /bin/grep "^shadow:" /etc/group
      register: shadow_out
      changed_when: false
      failed_when: shadow_out.rc == "2"

    - name: 6.2.4 - Print report of shadow in /etc/group to user
      ansible.builtin.debug:
        msg: "Shadow group exists in /etc/group. Remove"
      changed_when: true
      when: shadow_out.stdout

- name: 6.2.5 - Ensure no duplicate UIDs exist
  tags:
    - 6.2.5
  block:
    - name: 6.2.5 - find accounts with UID of 0
      ansible.builtin.shell: "/usr/bin/cat /etc/passwd | awk -F: '($3 == 0) { print $1 }'"
      register: rootuid
      changed_when: rootuid.rc >= 2
      check_mode: false

    - name: 6.2.5 - Use script to pull the list of duplicate UIDs
      ansible.builtin.script:
        cmd: files/duplicate_uids.sh
      register: duplicate_uids
      changed_when: false
      check_mode: false

    - name: 6.2.5 - Print report of duplicated UIDs to user
      ansible.builtin.debug:
        msg: "{{ duplicate_uids.stdout_lines }}"
      changed_when: true
      when: duplicate_uids.stdout

- name: 6.2.6 - Report on duplicate GIDs in /etc/group
  tags:
    - 6.2.6
  block:
    - name: 6.2.6 - Use script to pull the list of duplicate GIDs
      ansible.builtin.script:
        cmd: files/duplicate_guids.sh
      register: duplicate_guids
      changed_when: false
      check_mode: false

    - name: 6.2.6 - Print report of duplcate GIDs to user
      ansible.builtin.debug:
        msg: "{{ duplicate_guids.stdout_lines }}"
      changed_when: true
      when: duplicate_guids.stdout

- name: 6.2.7 - Report on duplicate users in /etc/passwd
  tags:
    - 6.2.7
  block:
    - name: 6.2.7 - Use script to pull the list of users
      ansible.builtin.script:
        cmd: files/duplicate_users.sh
      register: duplicate_users
      changed_when: false
      check_mode: false

    - name: 6.2.7 - Print report of duplicate users to user
      ansible.builtin.debug:
        msg: "{{ duplicate_users.stdout_lines }}"
      changed_when: true
      when: duplicate_users.stdout

- name: 6.2.8 - Report on duplicate groups in /etc/group
  tags:
    - 6.2.8
  block:
    - name: 6.2.8 - Use script to pull the list of groups
      ansible.builtin.script:
        cmd: files/duplicate_groups.sh
      register: duplicate_groups
      changed_when: false
      check_mode: false

    - name: 6.2.8 - Print report of duplicate groups to user
      ansible.builtin.debug:
        msg: "{{ duplicate_groups.stdout_lines }}"
      changed_when: true
      when: duplicate_groups.stdout

- name: 6.2.9 - Ensure root PATH integrity
  tags:
    - 6.2.9
  block:
    - name: 6.2.9 - Run script on path variable
      ansible.builtin.script: files/path_check.sh
      changed_when: false
      register: path_check
      check_mode: false

    - name: 6.2.9 - Print report to user
      ansible.builtin.debug:
        msg:
          - "Note, Ansible runs this as SUDO with the ansible user's PATH variable. The script may not print issues"
          - "that exist in root's path because of this. It should be run as root on the target machine manually."
          - " {{ path_check.stdout }}"
      when: path_check.stdout

- name: 6.2.10 - Ensure root is the only UID 0 account
  tags:
    - 6.2.10
  block:
    - name: 6.2.10 - find accounts with UID of 0
      ansible.builtin.shell: "/usr/bin/cat /etc/passwd | awk -F: '($3 == 0) { print $1 }'"
      register: rootuid
      changed_when: rootuid.rc == 2
      check_mode: false

    - name: 6.2.10 - Report on mulitple accounts with UID of 0
      ansible.builtin.debug:
        msg:
          - "Accounts with UID zero in addition to root"
          - " {{ rootuid.stdout_lines }}"
      changed_when: true
      when: rootuid.stdout != 'root'

- name: 6.2.10 - Report on users that do not have a home directory
  tags:
    - 6.2.10
  block:
    - name: 6.2.10 - Use script to find the users
      ansible.builtin.script:
        cmd: files/non_existant_homedirs.sh
      register: nohomedir
      changed_when: false

    - name: 6.2.10 - Print report of users that do not have a home directory
      ansible.builtin.debug:
        msg: "{{ nohomedir.stdout_lines }}"
      changed_when: true
      when: nohomedir.stdout
